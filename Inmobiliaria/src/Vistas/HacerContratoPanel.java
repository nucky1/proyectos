/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controllers.HacerContratoController;
import Modelo.Asesor;
import Modelo.Cliente;
import Modelo.Contrato;
import java.awt.Window; 
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fran_
 */
public class HacerContratoPanel extends javax.swing.JPanel implements HacerContratoView {

    private DefaultTableModel tabla;
    private HashMap<Integer, Cliente> mapC = null;
    private HashMap<Integer, Asesor> mapA = null;
    private int duenioID;
    private int asesorID;
    private int inmuebleID;
    private ArrayList errores = new ArrayList<String>();
    private HacerContratoController pac = new HacerContratoController(this);
    /**
     * Creates new form HacerContrato
     */
    public HacerContratoPanel(int duenioID, int inmuebleID,float pInicial) {
        this.duenioID = duenioID;
        this.inmuebleID = inmuebleID;
        initComponents();
        //---------CSS STYLE
        jPanel3.setBorder(StyleCSS.getBordePanel("Seleccionar Cliente-Ingresar Nuevo"));
        jPanel1.setBorder(StyleCSS.getBordePanel("Datos del Dueño: "));
        jPanel2.setBorder(StyleCSS.getBordePanel("Cargar Datos de la Operción :"));
        StyleCSS.setPlaceHolder(fieldNombre, "Nombre");
        StyleCSS.setPlaceHolder(fieldDoc, "Documento");
        StyleCSS.setPlaceHolder(fieldTel, "Telefono");
        StyleCSS.setPlaceHolder(fieldContacto, "Contacto (FB,INSTA)");
        //---------FIN CSS STYLE
        Cliente aux = (new HacerContratoController(this)).buscarCliente(duenioID);
        Asesor aux2 = (new HacerContratoController(this)).buscarAsesor(aux.getAsesorID());
        (new HacerContratoController(this)).llenarComboBox();
        this.asesorID = aux2.getId();
        this.labelNombre.setText(aux.getNombre());
        this.labelContacto.setText(aux.getContacto());
        this.labelDni.setText(Integer.toString(aux.getDocumento()));
        this.labelTel.setText(Long.toString(aux.getTel()));
        this.labelIdAse.setText(Integer.toString(aux2.getId()));
        this.labelNombreAse.setText(aux2.getNombre());
        this.botonNuevoCliente.setEnabled(false);
        this.precioInicialField.setText(""+pInicial);
        this.fechaInicio.setDate(new Date(System.currentTimeMillis()));
        pac.llenarTablaPorDni("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        fieldNombre = new javax.swing.JTextField();
        fieldContacto = new javax.swing.JTextField();
        radioCUIT = new javax.swing.JRadioButton();
        radioDNI = new javax.swing.JRadioButton();
        fieldDoc = new javax.swing.JTextField();
        fieldTel = new javax.swing.JTextField();
        botonNuevoCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jBuscarPorDni = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        botonAlta = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        comboAsesores = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        pagadoLabel = new javax.swing.JLabel();
        restanteLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaObservacion = new javax.swing.JTextArea();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        diaVencimientoField = new javax.swing.JTextField();
        fechaInicio = new com.toedter.calendar.JDateChooser();
        fechaFin = new com.toedter.calendar.JDateChooser();
        labelNombreAse = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        labelIdAse = new javax.swing.JLabel();
        botonSalir = new javax.swing.JButton();
        comCap = new javax.swing.JLabel();
        comOfi = new javax.swing.JLabel();
        comAseC = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        periodoAumentoField = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel45 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        porcentajeAumentoField = new javax.swing.JTextField();
        aumentoField = new javax.swing.JTextField();
        comisionField = new javax.swing.JTextField();
        depositoField = new javax.swing.JTextField();
        seniaField = new javax.swing.JTextField();
        precioInicialField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelDni = new javax.swing.JLabel();
        labelTel = new javax.swing.JLabel();
        labelContacto = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(231, 60, 0), 2), "Cargar Contrato ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Microsoft YaHei UI", 1, 16), new java.awt.Color(231, 60, 0))); // NOI18N
        setForeground(new java.awt.Color(231, 60, 0));
        setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);
        jPanel3.add(fieldNombre);
        fieldNombre.setBounds(150, 220, 260, 30);
        jPanel3.add(fieldContacto);
        fieldContacto.setBounds(150, 390, 260, 30);

        radioCUIT.setText("CUIT");
        radioCUIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCUITActionPerformed(evt);
            }
        });
        jPanel3.add(radioCUIT);
        radioCUIT.setBounds(290, 260, 100, 30);

        radioDNI.setText("DNI");
        radioDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDNIActionPerformed(evt);
            }
        });
        jPanel3.add(radioDNI);
        radioDNI.setBounds(180, 260, 100, 30);

        fieldDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldDocKeyTyped(evt);
            }
        });
        jPanel3.add(fieldDoc);
        fieldDoc.setBounds(150, 310, 260, 30);

        fieldTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldTelKeyTyped(evt);
            }
        });
        jPanel3.add(fieldTel);
        fieldTel.setBounds(150, 350, 260, 30);

        botonNuevoCliente.setText("Nuevo Cliente");
        botonNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoClienteActionPerformed(evt);
            }
        });
        jPanel3.add(botonNuevoCliente);
        botonNuevoCliente.setBounds(30, 440, 160, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nombre y Apellido : ");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(30, 220, 140, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Tipo Documento :");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(30, 260, 140, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Telefono :");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(30, 350, 140, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Contacto :");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(30, 390, 140, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Buscar por nombre : ");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(20, 30, 140, 30);

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "CUIT/DNI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaClientes);

        jPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(20, 70, 400, 130);

        jBuscarPorDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jBuscarPorDniKeyReleased(evt);
            }
        });
        jPanel3.add(jBuscarPorDni);
        jBuscarPorDni.setBounds(180, 30, 230, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Documento :");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(30, 310, 140, 30);

        botonAlta.setText("Alta");
        botonAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAltaActionPerformed(evt);
            }
        });
        jPanel3.add(botonAlta);
        botonAlta.setBounds(250, 440, 160, 30);

        add(jPanel3);
        jPanel3.setBounds(20, 30, 440, 490);
        add(jSeparator1);
        jSeparator1.setBounds(24, 38, 1210, 0);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);
        jPanel2.add(jSeparator2);
        jSeparator2.setBounds(10, 200, 630, 20);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Id:");
        jPanel2.add(jLabel22);
        jLabel22.setBounds(560, 20, 20, 30);
        jLabel22.getAccessibleContext().setAccessibleName("Asesor que capto la propiedad :");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("Inicio del Contrato  :");
        jPanel2.add(jLabel24);
        jLabel24.setBounds(30, 260, 113, 14);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("Asesor que capto Cliente  : ");
        jPanel2.add(jLabel27);
        jLabel27.setBounds(30, 220, 152, 14);

        comboAsesores.setMaximumSize(null);
        comboAsesores.setMinimumSize(null);
        comboAsesores.setName(""); // NOI18N
        jPanel2.add(comboAsesores);
        comboAsesores.setBounds(310, 210, 310, 30);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Total :");
        jPanel2.add(jLabel30);
        jLabel30.setBounds(30, 470, 73, 14);

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("Pagado :");
        jPanel2.add(jLabel31);
        jLabel31.setBounds(30, 510, 73, 14);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Restante :");
        jPanel2.add(jLabel32);
        jLabel32.setBounds(30, 550, 73, 14);

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("$");
        jPanel2.add(jLabel33);
        jLabel33.setBounds(110, 460, 18, 30);

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("$");
        jPanel2.add(jLabel34);
        jLabel34.setBounds(110, 500, 18, 30);

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("$");
        jPanel2.add(jLabel35);
        jLabel35.setBounds(110, 540, 18, 30);

        totalLabel.setText("0.0");
        jPanel2.add(totalLabel);
        totalLabel.setBounds(130, 470, 190, 14);

        pagadoLabel.setText("0.0");
        jPanel2.add(pagadoLabel);
        pagadoLabel.setBounds(130, 510, 190, 14);

        restanteLabel.setText("0.0");
        jPanel2.add(restanteLabel);
        restanteLabel.setBounds(130, 550, 190, 14);

        areaObservacion.setColumns(20);
        areaObservacion.setLineWrap(true);
        areaObservacion.setRows(5);
        areaObservacion.setText("Observaciones:\n");
        jScrollPane2.setViewportView(areaObservacion);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(10, 60, 630, 130);

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel39.setText("Montos :");
        jPanel2.add(jLabel39);
        jLabel39.setBounds(30, 420, 100, 20);

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setText("Captador Cliente :");
        jPanel2.add(jLabel40);
        jLabel40.setBounds(340, 500, 100, 20);

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel41.setText("Captador Inmueble :");
        jPanel2.add(jLabel41);
        jLabel41.setBounds(340, 550, 120, 14);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("$");
        jPanel2.add(jLabel43);
        jLabel43.setBounds(460, 540, 18, 30);

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("$");
        jPanel2.add(jLabel44);
        jLabel44.setBounds(460, 500, 18, 20);

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("$");
        jPanel2.add(jLabel47);
        jLabel47.setBounds(460, 450, 18, 40);

        jButton2.setText("Guardar Datos ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(380, 610, 130, 30);

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel48.setText("Dia venc. del Mes:");
        jPanel2.add(jLabel48);
        jLabel48.setBounds(320, 310, 130, 20);

        jLabel49.setText("Meses");
        jPanel2.add(jLabel49);
        jLabel49.setBounds(220, 310, 50, 14);

        diaVencimientoField.setMaximumSize(null);
        diaVencimientoField.setMinimumSize(null);
        diaVencimientoField.setName(""); // NOI18N
        diaVencimientoField.setPreferredSize(new java.awt.Dimension(20, 20));
        diaVencimientoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                diaVencimientoFieldKeyTyped(evt);
            }
        });
        jPanel2.add(diaVencimientoField);
        diaVencimientoField.setBounds(500, 300, 120, 30);

        fechaInicio.setMaximumSize(null);
        fechaInicio.setMinimumSize(null);
        fechaInicio.setName(""); // NOI18N
        jPanel2.add(fechaInicio);
        fechaInicio.setBounds(160, 250, 140, 30);

        fechaFin.setMaximumSize(null);
        fechaFin.setMinimumSize(null);
        fechaFin.setName(""); // NOI18N
        jPanel2.add(fechaFin);
        fechaFin.setBounds(480, 250, 140, 30);

        labelNombreAse.setText("jLabel2");
        jPanel2.add(labelNombreAse);
        labelNombreAse.setBounds(190, 20, 200, 30);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Asesor que capto la propiedad :");
        jPanel2.add(jLabel23);
        jLabel23.setBounds(10, 20, 180, 30);

        labelIdAse.setText("jLabel2");
        jPanel2.add(labelIdAse);
        labelIdAse.setBounds(580, 20, 34, 30);

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        jPanel2.add(botonSalir);
        botonSalir.setBounds(530, 610, 79, 30);

        comCap.setText("0.0");
        jPanel2.add(comCap);
        comCap.setBounds(480, 550, 150, 14);

        comOfi.setText("0.0");
        jPanel2.add(comOfi);
        comOfi.setBounds(480, 460, 150, 14);

        comAseC.setText("0.0");
        jPanel2.add(comAseC);
        comAseC.setBounds(480, 500, 150, 14);

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel42.setText("Oficina :");
        jPanel2.add(jLabel42);
        jLabel42.setBounds(340, 460, 50, 20);

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel50.setText("Periodo de aumento  :");
        jPanel2.add(jLabel50);
        jLabel50.setBounds(30, 310, 130, 14);

        periodoAumentoField.setMaximumSize(null);
        periodoAumentoField.setMinimumSize(null);
        periodoAumentoField.setName(""); // NOI18N
        periodoAumentoField.setPreferredSize(new java.awt.Dimension(20, 20));
        periodoAumentoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                periodoAumentoFieldKeyTyped(evt);
            }
        });
        jPanel2.add(periodoAumentoField);
        periodoAumentoField.setBounds(160, 300, 46, 30);

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("Fin del contrato  :");
        jPanel2.add(jLabel36);
        jLabel36.setBounds(320, 260, 110, 14);
        jPanel2.add(jSeparator3);
        jSeparator3.setBounds(20, 450, 620, 10);

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel45.setText("Comisiones:");
        jPanel2.add(jLabel45);
        jLabel45.setBounds(340, 420, 100, 20);

        jLabel2.setText("Comision");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(530, 350, 90, 14);

        jLabel12.setText("Seña");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(130, 350, 90, 14);

        jLabel13.setText("Precio Inicial");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(30, 350, 90, 14);

        jLabel14.setText("% Aumento");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(230, 350, 90, 14);

        jLabel15.setText("1° Aumento");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(330, 350, 90, 14);

        jLabel16.setText("Deposito");
        jPanel2.add(jLabel16);
        jLabel16.setBounds(430, 350, 90, 14);

        porcentajeAumentoField.setMaximumSize(null);
        porcentajeAumentoField.setMinimumSize(null);
        porcentajeAumentoField.setName(""); // NOI18N
        porcentajeAumentoField.setPreferredSize(new java.awt.Dimension(20, 20));
        porcentajeAumentoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                porcentajeAumentoFieldFocusLost(evt);
            }
        });
        porcentajeAumentoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                porcentajeAumentoFieldKeyTyped(evt);
            }
        });
        jPanel2.add(porcentajeAumentoField);
        porcentajeAumentoField.setBounds(230, 370, 90, 30);

        aumentoField.setMaximumSize(null);
        aumentoField.setMinimumSize(null);
        aumentoField.setName(""); // NOI18N
        aumentoField.setPreferredSize(new java.awt.Dimension(20, 20));
        aumentoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aumentoFieldActionPerformed(evt);
            }
        });
        aumentoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aumentoFieldKeyTyped(evt);
            }
        });
        jPanel2.add(aumentoField);
        aumentoField.setBounds(330, 370, 90, 30);

        comisionField.setMaximumSize(null);
        comisionField.setMinimumSize(null);
        comisionField.setName(""); // NOI18N
        comisionField.setPreferredSize(new java.awt.Dimension(20, 20));
        comisionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                comisionFieldFocusLost(evt);
            }
        });
        comisionField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                comisionFieldKeyTyped(evt);
            }
        });
        jPanel2.add(comisionField);
        comisionField.setBounds(530, 370, 90, 30);

        depositoField.setMaximumSize(null);
        depositoField.setMinimumSize(null);
        depositoField.setName(""); // NOI18N
        depositoField.setPreferredSize(new java.awt.Dimension(20, 20));
        depositoField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                depositoFieldFocusLost(evt);
            }
        });
        depositoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                depositoFieldKeyTyped(evt);
            }
        });
        jPanel2.add(depositoField);
        depositoField.setBounds(430, 370, 90, 30);

        seniaField.setMaximumSize(null);
        seniaField.setMinimumSize(null);
        seniaField.setName(""); // NOI18N
        seniaField.setPreferredSize(new java.awt.Dimension(20, 20));
        seniaField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                seniaFieldFocusLost(evt);
            }
        });
        seniaField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                seniaFieldKeyTyped(evt);
            }
        });
        jPanel2.add(seniaField);
        seniaField.setBounds(130, 370, 90, 30);

        precioInicialField.setMaximumSize(null);
        precioInicialField.setMinimumSize(null);
        precioInicialField.setName(""); // NOI18N
        precioInicialField.setPreferredSize(new java.awt.Dimension(20, 20));
        precioInicialField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                precioInicialFieldFocusLost(evt);
            }
        });
        precioInicialField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioInicialFieldKeyTyped(evt);
            }
        });
        jPanel2.add(precioInicialField);
        precioInicialField.setBounds(30, 370, 90, 30);

        add(jPanel2);
        jPanel2.setBounds(470, 30, 650, 660);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Nombre y Apellido :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 40, 110, 20);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Documento :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 70, 90, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Telefono :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 100, 90, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Contacto :");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 130, 90, 20);

        labelNombre.setText("Francisco");
        jPanel1.add(labelNombre);
        labelNombre.setBounds(200, 40, 210, 20);

        labelDni.setText("40823458");
        jPanel1.add(labelDni);
        labelDni.setBounds(200, 70, 210, 20);

        labelTel.setText("2664842481");
        jPanel1.add(labelTel);
        labelTel.setBounds(200, 100, 210, 20);

        labelContacto.setText("rosasfran.97@gmail");
        jPanel1.add(labelContacto);
        labelContacto.setBounds(200, 130, 210, 20);

        add(jPanel1);
        jPanel1.setBounds(20, 520, 440, 170);
    }// </editor-fold>//GEN-END:initComponents

    private void jBuscarPorDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBuscarPorDniKeyReleased
        if (this.tablaClientes.getSelectedRow() == -1) {
            this.botonNuevoCliente.setVisible(true);
        }
        pac.llenarTablaPorDni(jBuscarPorDni.getText());
    }//GEN-LAST:event_jBuscarPorDniKeyReleased

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        Cliente aux = mapC.get(this.tablaClientes.getValueAt(tablaClientes.getSelectedRow(), 0));
        this.fieldNombre.setText(aux.getNombre());
        this.fieldContacto.setText(aux.getContacto());
        this.fieldDoc.setText(Integer.toString(aux.getDocumento()));
        this.fieldTel.setText(Long.toString(aux.getTel()));
        this.botonAlta.setEnabled(false);
        this.botonNuevoCliente.setEnabled(true);
        this.radioDNI.setEnabled(false);
        this.radioCUIT.setEnabled(false);
        this.fieldNombre.setEnabled(false);
        this.fieldContacto.setEnabled(false);
        this.fieldDoc.setEnabled(false);
        this.fieldTel.setEnabled(false);
    }//GEN-LAST:event_tablaClientesMouseClicked

    private void botonNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoClienteActionPerformed
        this.tablaClientes.clearSelection();
        this.fieldNombre.setText("");
        this.fieldContacto.setText("");
        this.fieldDoc.setText("");
        this.fieldTel.setText("");
        this.radioDNI.setEnabled(true);
        this.radioCUIT.setEnabled(true);
        this.fieldNombre.setEnabled(true);
        this.fieldContacto.setEnabled(true);
        this.fieldDoc.setEnabled(true);
        this.fieldTel.setEnabled(true);
        this.botonAlta.setEnabled(true);
        comboAsesores.setEnabled(true);

    }//GEN-LAST:event_botonNuevoClienteActionPerformed

    private void radioDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDNIActionPerformed
        this.radioCUIT.setSelected(false);
    }//GEN-LAST:event_radioDNIActionPerformed

    private void radioCUITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCUITActionPerformed
        this.radioDNI.setSelected(false);
    }//GEN-LAST:event_radioCUITActionPerformed

    private void fieldTelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldTelKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_fieldTelKeyTyped

    private void fieldDocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldDocKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_fieldDocKeyTyped

    private void botonAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAltaActionPerformed
        int tipoDoc = 1;
        int documento;
        long tel;
        Cliente nuevo;
        String contacto = this.fieldContacto.getText();
        String nombre = this.fieldNombre.getText();
        Pattern patron = Pattern.compile("[^A-Za-z ]");
        Matcher encaja = patron.matcher(nombre);
        if (encaja.find()) {
            JOptionPane.showMessageDialog(null, "El nombre ingresado es invalido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!this.radioCUIT.isSelected() && !this.radioDNI.isSelected()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de documento", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.radioDNI.isSelected()) {
            tipoDoc = 0;
        }
        try {
            documento = Integer.parseInt(this.fieldDoc.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El dni ingresado no es valido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            tel = Long.parseLong(this.fieldTel.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El telefono ingresado no es valido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if ("".equals(contacto)) {
            JOptionPane.showMessageDialog(null, "El contacto ingresado no es valido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        nuevo = new Cliente(0, this.asesorID, nombre, documento, tipoDoc, tel, contacto);
        (new HacerContratoController(this)).altaCliente(nuevo);
    }//GEN-LAST:event_botonAltaActionPerformed

    private void precioInicialFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioInicialFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_precioInicialFieldKeyTyped

    private void precioInicialFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_precioInicialFieldFocusLost
        try {
            this.llenarLabels();
        } catch (NumberFormatException ex) {
            //errores.add( " precio inicial ");
        }
    }//GEN-LAST:event_precioInicialFieldFocusLost

    private void seniaFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seniaFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_seniaFieldKeyTyped

    private void seniaFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_seniaFieldFocusLost
        try {
            this.llenarLabels();
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(null, "La seña es invalida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_seniaFieldFocusLost

    private void depositoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_depositoFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_depositoFieldKeyTyped

    private void depositoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_depositoFieldFocusLost
        try {
            this.llenarLabels();
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(null, "El deposito es invalido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_depositoFieldFocusLost

    private void comisionFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comisionFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_comisionFieldKeyTyped

    private void comisionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comisionFieldFocusLost
        try {
            this.llenarLabels();
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(null, "La comision es invalida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_comisionFieldFocusLost

    private void aumentoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aumentoFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_aumentoFieldKeyTyped

    private void aumentoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aumentoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aumentoFieldActionPerformed

    private void porcentajeAumentoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentajeAumentoFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_porcentajeAumentoFieldKeyTyped

    private void porcentajeAumentoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_porcentajeAumentoFieldFocusLost
        try {
            float aux = Float.parseFloat(this.porcentajeAumentoField.getText());
            float aux2 = Float.parseFloat(this.precioInicialField.getText());
            aux = aux * aux2 / 100;
            aux += aux2;
            aux /= 50;
            aux = (float) Math.ceil(aux);
            aux *= 50;
            this.aumentoField.setText("" + aux);
        } catch (NumberFormatException e) {
            //JOptionPane.showMessageDialog(null, "El porcentaje ingresado es invalido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_porcentajeAumentoFieldFocusLost

    private void periodoAumentoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_periodoAumentoFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        try {
            if (Integer.parseInt(this.periodoAumentoField.getText()) < 0 || 12 < Integer.parseInt(this.periodoAumentoField.getText())) {
               // JOptionPane.showMessageDialog(null, "El periodo de aumento debe durar a lo sumo un año", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(null, "El periodo de aumento no es valido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_periodoAumentoFieldKeyTyped

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        Window w = SwingUtilities.getWindowAncestor(this);
        w.dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void diaVencimientoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diaVencimientoFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
        try {
            if (Integer.parseInt(this.diaVencimientoField.getText()) < 1 || 31 < Integer.parseInt(this.diaVencimientoField.getText())) {
                //JOptionPane.showMessageDialog(null, "El dia ingresado no es valido", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            //JOptionPane.showMessageDialog(null, "El dia ingresado no es valido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_diaVencimientoFieldKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Date fechaInicioAux = this.fechaInicio.getDate();
        Date fechaFinAux = this.fechaFin.getDate();
        String observaciones = this.areaObservacion.getText();

        if (tablaClientes.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Cliente", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.fechaInicio.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de inicio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.fechaFin.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de fin", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int periodo;
        try {
            periodo = Integer.parseInt(this.periodoAumentoField.getText());
            Calendar inicio = new GregorianCalendar();
            Calendar fin = new GregorianCalendar();
            inicio.setTime(this.fechaInicio.getDate());
            fin.setTime(this.fechaFin.getDate());
            int difA = fin.get(Calendar.YEAR) - inicio.get(Calendar.YEAR);
            int difM = difA * 12 + fin.get(Calendar.MONTH) - inicio.get(Calendar.MONTH);
            if (difM < periodo) {
                JOptionPane.showMessageDialog(null, "El periodo de aumento es muy grande para las fechas ingresadas", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "El periodo de aumento es invalido", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        float precioInicial;
        String textipo0 = "Los siguientes valores no pueden ser 0: ";
        String texttipoInvalid = "Los siguientes valores son invalidos: ";
        String errorestipoVacio = "";
        String errorestipoCero= "";
        try {
            precioInicial = Float.parseFloat(this.precioInicialField.getText());
            if (precioInicial == 0) {
                errorestipoCero += "\n - Precio inicial";
            }
        } catch (NumberFormatException e) {
            errorestipoVacio += "\n - Precio inicial";
        }
        float senia;
        try {
            senia = Float.parseFloat(this.seniaField.getText());
            if (senia == 0) {
                errorestipoCero += "\n - Seña";
            }
        } catch (NumberFormatException e) {
            errorestipoVacio += "\n - Seña";
        }

        float porcentajeAumento = 0;
        try {
            porcentajeAumento = Float.parseFloat(this.porcentajeAumentoField.getText());
            if (porcentajeAumento == 0) {
                errorestipoCero += "\n - Porcentaje de aumento";
            }
        } catch (NumberFormatException e) {
            errorestipoVacio += "\n - Porcentaje de aumento";
        }

        float aumento = 0;
        try {
            aumento = Float.parseFloat(this.aumentoField.getText());
            if (aumento == 0) {
                errorestipoCero += "\n - Aumento";
            }
        } catch (NumberFormatException e) {
            errorestipoVacio += "\n - Aumento";
        }

        float deposito;
        try {
            deposito = Float.parseFloat(this.depositoField.getText());
            if (deposito == 0) {
                errorestipoCero += "\n - Deposito";
            }
        } catch (NumberFormatException e) {
            errorestipoVacio += "\n - Deposito";
        }

        float comision;
        try {
            comision = Float.parseFloat(this.comisionField.getText());
            if (comision == 0) {
                errorestipoCero += "\n - Comision";
            }
        } catch (NumberFormatException e) {
            errorestipoVacio += "\n - Comision";
        }
        if(!errorestipoCero.equals("")){
            JOptionPane.showMessageDialog(null, textipo0 + errorestipoCero, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!errorestipoVacio.equals("")){
            JOptionPane.showMessageDialog(null, texttipoInvalid + errorestipoVacio, "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        senia = 0f;
        comision = 0f;
        deposito= 0f;
        precioInicial= 0f;
        if (senia > comision + deposito + precioInicial) {
            JOptionPane.showMessageDialog(null, "La comision es mayor que el monto total ingresado", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int clienteID = mapC.get(this.tablaClientes.getValueAt(tablaClientes.getSelectedRow(), 0)).getId();
        int asesorIDCliente = mapA.get(this.comboAsesores.getSelectedIndex()).getId();

        Contrato nuevo = new Contrato(0, new Date(), comision, observaciones, clienteID, this.inmuebleID, this.duenioID, asesorIDCliente, 1, false, porcentajeAumento, aumento, this.fechaFin.getDate(), Integer.parseInt(this.diaVencimientoField.getText()), this.fechaInicio.getDate());
        (new HacerContratoController(this)).alta(nuevo, senia, precioInicial,periodo);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaObservacion;
    private javax.swing.JTextField aumentoField;
    private javax.swing.JButton botonAlta;
    private javax.swing.JButton botonNuevoCliente;
    private javax.swing.JButton botonSalir;
    private javax.swing.JLabel comAseC;
    private javax.swing.JLabel comCap;
    private javax.swing.JLabel comOfi;
    private javax.swing.JComboBox<String> comboAsesores;
    private javax.swing.JTextField comisionField;
    private javax.swing.JTextField depositoField;
    private javax.swing.JTextField diaVencimientoField;
    private com.toedter.calendar.JDateChooser fechaFin;
    private com.toedter.calendar.JDateChooser fechaInicio;
    private javax.swing.JTextField fieldContacto;
    private javax.swing.JTextField fieldDoc;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JTextField fieldTel;
    private javax.swing.JTextField jBuscarPorDni;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labelContacto;
    private javax.swing.JLabel labelDni;
    private javax.swing.JLabel labelIdAse;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelNombreAse;
    private javax.swing.JLabel labelTel;
    private javax.swing.JLabel pagadoLabel;
    private javax.swing.JTextField periodoAumentoField;
    private javax.swing.JTextField porcentajeAumentoField;
    private javax.swing.JTextField precioInicialField;
    private javax.swing.JRadioButton radioCUIT;
    private javax.swing.JRadioButton radioDNI;
    private javax.swing.JLabel restanteLabel;
    private javax.swing.JTextField seniaField;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void llenarTablaClientes(ArrayList<Cliente> listaC) {
        int fila = 0;
        mapC = new HashMap<>();
        tabla = (DefaultTableModel) tablaClientes.getModel();
        tabla.setNumRows(0);
        for (Cliente cl : listaC) {
            mapC.put(cl.getId(), cl);
            tabla.addRow(new Object[3]);
            tablaClientes.setValueAt(cl.getId(), fila, 0);
            tablaClientes.setValueAt(cl.getNombre(), fila, 1);
            tablaClientes.setValueAt(cl.getDocumento(), fila, 2);
            fila++;
        }
    }

    @Override
    public void llenarAsesores(ArrayList<Asesor> listaA) {
        int cont = 0;
        mapA = new HashMap<>();
        for (Asesor cl : listaA) {
            mapA.put(cont, cl);
            this.comboAsesores.addItem(cl.getId() + "-" + cl.getNombre());
            cont++;
        }
    }

    @Override
    public void nuevoCliente() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void nuevoContratoAlquiler() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void llenarCliente(Cliente inm) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * 0 se dio de alta -- 1 error en alta -- 2 error en alta pagos
     *
     * @param alta
     */
    @Override
    public void respuestaAlta(int alta) {
        switch (alta) {
            case 0:
                (new HacerContratoController(this)).setReservado(this.inmuebleID);
                JOptionPane.showMessageDialog(null, "El contrato se guardo con exito");
                Window w = SwingUtilities.getWindowAncestor(this);
                w.dispose();
                break;
            case 1:
                JOptionPane.showMessageDialog(null, "No se ha podido dar de alta.");
                break;
            default:
                JOptionPane.showMessageDialog(null, "No se han podido dar de alta los pagos correspondientes al contrato.");
                break;
        }
    }

    private void llenarLabels() {
        float precI = Float.parseFloat(this.precioInicialField.getText());
        float deposito = Float.parseFloat(this.depositoField.getText());
        float senia = Float.parseFloat(this.seniaField.getText());
        float comision = Float.parseFloat(this.comisionField.getText());
        float total = precI + deposito + comision;
        float restante = total - senia;
        this.totalLabel.setText(total + "");
        this.pagadoLabel.setText(senia + "");
        this.restanteLabel.setText("" + restante);
        this.comOfi.setText("" + comision / 2);
        this.comCap.setText("" + comision / 4);
        this.comAseC.setText("" + comision / 4);
    }
}
